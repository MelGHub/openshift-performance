{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
	"name": "network-test",
	"annotations": {
	    "description": "A template for creating resources for network testing",
	    "tags": "iperf,netperf,uperf,networking"
	}
    },
    "labels": {
	"template": "network-test"
    },
    "objects": [
	{
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "annotations": {
                    "description": "Keeps track of changes in the application image"
                },
                "name": "network-test"
            }
        },
	{
	    "kind": "ImageStream",
	    "apiVersion": "v1",
	    "metadata": {
		"name": "rhel-tools",
		"annotations": {
		    "description": "Keeps track of changes in the application image"
		}
	    },
	    "spec": {
		"dockerImageRepository": "registry.access.redhat.com/rhel7/rhel-tools"
	    },
	    "status": {
		"dockerImageRepository": ""
	    }
	},
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "annotations": {
                    "description": "Defines how to build the application"
                },
                "name": "network-test"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "network-test:latest"
                    }
                },
		"source": {
		    "type": "Dockerfile",
		    "dockerfile": "FROM registry.access.redhat.com/rhel7/rhel-tools \nMAINTAINER rosmith \u003crosmith@redhat.com\u003e \nRUN curl -o /etc/yum.repos.d/rhel7-latest.repo http://git.app.eng.bos.redhat.com/git/perf-dept.git/plain/repo_files/rhel7-latest.repo; curl -o /etc/yum.repos.d/pbench-configtools.repo https://copr.fedorainfracloud.org/coprs/ndokos/configtools/repo/epel-7/ndokos-configtools-epel-7.repo; curl -o /etc/yum.repos.d/pbench-epel.repo https://copr.fedorainfracloud.org/coprs/ndokos/pbench/repo/epel-7/ndokos-pbench-epel-7.repo; curl -o /etc/yum.repos.d/pbench-interal.repo http://pbench.perf.lab.eng.bos.redhat.com/repo/yum.repos.d/pbench.repo; yum install -y -q yum-plugin-ovl openssh-server pbench-agent configtools sos netperf uperf; yum install -y -q pbench-agent-internal; yum clean all; source /opt/pbench-agent/profile; git config --global http.sslVerify false; git clone https://code.engineering.redhat.com/gerrit/p/perf-dept.git /root/perf-dept; cp /root/perf-dept/bashrc/bashrc ~/.bashrc; /root/perf-dept/ssh_keys/sshkeys.sh --setup; ssh-keygen -A; rm -f /lib/systemd/system/systemd*udev* ; rm -f /lib/systemd/system/getty.target; systemctl enable sshd; echo \"root:redhat\" | chpasswd \n \nCMD [\"/usr/sbin/init\"]\n"
		},
                "strategy": {
                    "type": "Docker",
		    "dockerStrategy": {
			"from": {
			    "kind": "ImageStreamTag",
			    "name": "rhel-tools:latest"
			}
		    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    },
                    {
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        },
                        "type": "GitHub"
                    }
                ]
            }
        },
	{
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "name": "sender"
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "kind": "Service",
                    "name": "sender"
                }
            }
        },
	{
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Exposes and load balances the application pods"
                },
                "name": "sender"
            },
            "spec": {
                "ports": [
                    {
                        "name": "ssh",
                        "port": 22
                    },
                    {
                        "name": "netperf-control-tcp",
                        "port": 12865,
                        "protocol": "TCP"
                    },
                    {
                        "name": "netperf-control-udp",
                        "port": 12865,
                        "protocol": "UDP"
                    },
                    {
                        "name": "netperf-data-tcp",
                        "port": 12866,
                        "protocol": "TCP"
                    },
                    {
                        "name": "netperf-data-udp",
                        "port": 12866,
                        "protocol": "UDP"
                    },
                    {
                        "name": "iperf2-tcp",
                        "port": 5001,
                        "protocol": "TCP"
                    },
                    {
                        "name": "iperf2-udp",
                        "port": 5001,
                        "protocol": "UDP"
                    },
                    {
                        "name": "iperf3-tcp",
                        "port": 5201,
                        "protocol": "TCP"
                    },
                    {
                        "name": "iperf3-udp",
                        "port": 5201,
                        "protocol": "UDP"
                    },
		    {
			"name": "uperf-1-tcp",
			"port": 20000,
			"protocol": "TCP"
		    },
		    {
			"name": "uperf-2-tcp",
			"port": 20001,
			"protocol": "TCP"
		    },
		    {
			"name": "uperf-3-tcp",
			"port": 20002,
			"protocol": "TCP"
		    },
		    {
			"name": "uperf-1-udp",
			"port": 20000,
			"protocol": "UDP"
		    },
		    {
			"name": "uperf-2-udp",
			"port": 20001,
			"protocol": "UDP"
		    },
		    {
			"name": "uperf-3-udp",
			"port": 20002,
			"protocol": "UDP"
		    }
                ],
                "selector": {
                    "name": "sender"
                }
            }
        },
	{
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "description": "Defines how to deploy the application server"
                },
                "labels": {
		    "name": "sender"
                },
                "name": "sender"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "name": "sender"
                },
                "strategy": {
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "name": "sender"
                        },
                        "name": "sender"
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "network-test",
                                "name": "sender",
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/sys/fs/cgroup",
                                        "name": "sys-fs-cgroup"
                                    }
                                ]
                            }
                        ],
			"dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "region": "${SENDER_REGION}"
                        },
                        "restartPolicy": "Always",
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/sys/fs/cgroup"
                                },
                                "name": "sys-fs-cgroup"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "sender"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "network-test:latest"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
	{
            "apiVersion": "v1",
            "kind": "Route",
            "metadata": {
                "name": "receiver"
            },
            "spec": {
                "host": "${APPLICATION_DOMAIN}",
                "to": {
                    "kind": "Service",
                    "name": "receiver"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "Exposes and load balances the application pods"
                },
                "name": "receiver"
            },
            "spec": {
                "ports": [
                    {
                        "name": "ssh",
                        "port": 22
                    },
                    {
                        "name": "netperf-control-tcp",
                        "port": 12865,
                        "protocol": "TCP"
                    },
                    {
                        "name": "netperf-control-udp",
                        "port": 12865,
                        "protocol": "UDP"
                    },
                    {
                        "name": "netperf-data-tcp",
                        "port": 12866,
                        "protocol": "TCP"
                    },
                    {
                        "name": "netperf-data-udp",
                        "port": 12866,
                        "protocol": "UDP"
                    },
                    {
                        "name": "iperf2-tcp",
                        "port": 5001,
                        "protocol": "TCP"
                    },
                    {
                        "name": "iperf2-udp",
                        "port": 5001,
                        "protocol": "UDP"
                    },
                    {
                        "name": "iperf3-tcp",
                        "port": 5201,
                        "protocol": "TCP"
                    },
                    {
                        "name": "iperf3-udp",
                        "port": 5201,
                        "protocol": "UDP"
                    },
		    {
			"name": "uperf-1-tcp",
			"port": 20000,
			"protocol": "TCP"
		    },
		    {
			"name": "uperf-2-tcp",
			"port": 20001,
			"protocol": "TCP"
		    },
		    {
			"name": "uperf-3-tcp",
			"port": 20002,
			"protocol": "TCP"
		    },
		    {
			"name": "uperf-1-udp",
			"port": 20000,
			"protocol": "UDP"
		    },
		    {
			"name": "uperf-2-udp",
			"port": 20001,
			"protocol": "UDP"
		    },
		    {
			"name": "uperf-3-udp",
			"port": 20002,
			"protocol": "UDP"
		    }
                ],
                "selector": {
                    "name": "receiver"
                }
            }
        },
	{
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "description": "Defines how to deploy the application server"
                },
                "labels": {
		    "name": "receiver"
                },
                "name": "receiver"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "name": "receiver"
                },
                "strategy": {
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "name": "receiver"
                        },
                        "name": "receiver"
                    },
                    "spec": {
                        "containers": [
                            {
                                "image": "network-test",
                                "name": "receiver",
                                "securityContext": {
                                    "privileged": true
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/sys/fs/cgroup",
                                        "name": "sys-fs-cgroup"
                                    }
                                ]
                            }
                        ],
			"dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "region": "${RECEIVER_REGION}"
                        },
                        "restartPolicy": "Always",
                        "volumes": [
                            {
                                "hostPath": {
                                    "path": "/sys/fs/cgroup"
                                },
                                "name": "sys-fs-cgroup"
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "receiver"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "network-test:latest"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        }
    ],
    "parameters": [
	{
	    "name": "APPLICATION_DOMAIN",
	    "description": "The exposed hostname that will route to the Beego service",
	    "value": ""
	},
	{
	    "name": "GITHUB_WEBHOOK_SECRET",
	    "description": "A secret string used to configure the GitHub webhook",
	    "generate": "expression",
	    "from": "[a-zA-Z0-9]{40}"
	},
	{
	    "name": "SENDER_REGION",
	    "description": "The name of the region where the sender pods will be scheduled",
	    "value": "sender"
	},
	{
	    "name": "RECEIVER_REGION",
	    "description": "The name of the region where the receiver pods will be scheduled",
	    "value": "receiver"
	}
    ]
}
